# -------------
# Configuration
# -------------

# Make sure terminal colors are set properly.
set -g default-terminal "screen-256color"

# More history please.
set -g history-limit 10000

# Enable mouse mode.
set -g mouse on

# Order windows from 1 (0 is far away).
set -g base-index 1

# keep window names
set-option -g allow-rename off

# fast command sequences
set -s escape-time 0

# vim bindings.
setw -g mode-keys vi

# xterm key bindings.
# setw -g xterm-keys on

# --------
# Bindings
# --------

# C-a prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split to same dir
# TODO: I'd love to use C-w v and C-w s to make window splits like in vim...
# Looks like I need to use the 'bind-key -T <KEY-TABLE>' option. Need to find out how to make a key table for C-w.
# Hopefully that doesn't complicate the whole "don't mess with vim" thing too much...
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

bind-key s split-window -v
bind-key v split-window -h

# vim-style window navigation
# unbind-key j
# bind-key j select-pane -D
# unbind-key k
# bind-key k select-pane -U
# unbind-key h
# bind-key h select-pane -L
# unbind-key l
# bind-key l select-pane -R

# alternate windows
bind-key a last-window

# reload config
bind-key r source-file ~/.tmux.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# From https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind-key -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Use the same keys for switching between vim buffers and tmux windows.
bind-key -n C-n run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-n) || tmux next-window"
bind-key -n C-p run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-p) || tmux previous-window"

# ------
# Status
# ------

set -g set-titles on
set -g set-titles-string '#(whoami)@#h'

# set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 5
set -g status-left-length 90
set -g status-right-length 60
set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=blue]#(hostname -s)#[fg=white]::"
set -g status-justify left
set -g status-right '#[fg=Cyan]#S #[fg=white]%a %d %b %R'
