#
# Utility functions
#

# Prepend a directory to the PATH if it exists.
function __path_prepend {
  [[ -d "$1" ]] && path=("$1" $path)
}

# Source a file if it exists.
function __check_and_source {
  [[ -f "$1" ]] && source "$1"
}

# Source a file if it is readable.
function __check_readable_and_source {
  [[ -r "$1" ]] && source "$1"
}

# Enable Powerlevel10k instant prompt, should be close to top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
__check_readable_and_source "$XDG_CACHE_HOME/p10k-instant-prompt-${(%):-%n}.zsh"

#
# History
#

setopt   EXTENDED_HISTORY       # Write the history file in the ':start:elapsed;command' format.
unsetopt SHARE_HISTORY          # Don't share history between all sessions
setopt   HIST_EXPIRE_DUPS_FIRST # Expire a duplicate event first when trimming history.
setopt   HIST_IGNORE_DUPS       # Do not record an event that was just recorded again.
setopt   HIST_IGNORE_ALL_DUPS   # Delete an old recorded event if a new event is a duplicate.
setopt   HIST_FIND_NO_DUPS      # Do not display a previously found event.
setopt   HIST_IGNORE_SPACE      # Do not record an event starting with a space.
setopt   HIST_SAVE_NO_DUPS      # Do not write a duplicate event to the history file.
setopt   HIST_VERIFY            # Do not execute immediately upon history expansion.

#
# Other shell options
#

setopt   CHECK_JOBS # Report the status of background/suspended jobs before exiting

#
# Aliases
#

__check_and_source "$ZDOTDIR/aliases.zsh"

#
# Path
#

# Load system-specific modifications to the shell
__check_and_source "$ZDOTDIR/.zshrc.local"

__path_prepend "$COURSIER_BIN_DIR"    # Scala
__check_and_source "$HOME/.cargo/env" # Rust
__check_and_source "${GHCUP_INSTALL_BASE_PREFIX:-$HOME}/.ghcup/env" # Haskell
__path_prepend "$HOME/.local/bin"

if [[ -n "$HOMEBREW_PREFIX" ]]; then
  __path_prepend "$HOMEBREW_PREFIX/opt/llvm/bin"            # LLVM utilities
  __path_prepend "$HOMEBREW_PREFIX/opt/ruby/bin"            # Ruby
  __path_prepend "$HOMEBREW_PREFIX/lib/ruby/gems/3.3.0/bin" # Ruby gems
  __path_prepend "$HOMEBREW_PREFIX/opt/make/libexec/gnubin" # make
fi

#
# vi keybindings
#

bindkey -v
export KEYTIMEOUT=1 # Quick transition from vi-insert to vi-normal mode

# Add Vi text-objects for brackets and quotes
autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed
for km in viopp visual; do
  bindkey -M $km -- '-' vi-up-line-or-history
  for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
    bindkey -M $km $c select-quoted
  done
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $km $c select-bracketed
  done
done

# Emulation of vim-surround
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd ys add-surround
bindkey -M visual S add-surround

#
# Completion
#

__check_and_source "$ZDOTDIR/completion.zsh"

#
# fzf
#

eval "$(fzf --zsh)"
bindkey -M vicmd "/" fzf-history-widget # Search history with fzf
bindkey -M vicmd "gf" fzf-file-widget   # Find files with fzf
bindkey -M vicmd "gd" fzf-cd-widget     # Find directories with fzf

#
# Other
#

[[ -f "$HOME/.pystartup" ]] && export PYTHONSTARTUP="$HOME/.pystartup" # Modify Python REPL

# Configure line editor
__check_and_source "$ZDOTDIR/editor.zsh"

# Set up shell prompt
__check_and_source "$ZDOTDIR/.p10k.zsh"

# Set up wezterm shell integration
__check_and_source "/Applications/WezTerm.app/Contents/Resources/wezterm.sh"

# Load powerlevel10k theme.
__check_readable_and_source "$ZDOTDIR/plugins/powerlevel10k/powerlevel10k.zsh-theme"
