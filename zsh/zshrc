ZSH_DIR="$HOME/.zsh"

# Enable Powerlevel10k instant prompt, should be close to top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# vi keybindings
bindkey -v

# ZSH command history
export HISTSIZE=100000
export SAVEHIST=100000
export HISTFILE="$HOME/.zsh_history"

export KEYTIMEOUT=1 # Quick transition from vi-insert to vi-normal mode

unsetopt SHARE_HISTORY # Don't share history between all sessions
setopt   CHECK_JOBS    # Report the status of background/suspended jobs before exiting

# Customize function path
if [[ -d $ZSH_DIR/completions ]]; then
  fpath=($ZSH_DIR/completions $fpath)
fi

# Load system-specific modifications to the shell
[[ -f "$HOME/.zshrc.local" ]] && source "$HOME/.zshrc.local"

# Add Scala tools to PATH
export COURSIER_BIN_DIR="$HOME/.local/share/coursier/bin"
[[ -d "$COURSIER_BIN_DIR" ]] && path=("$COURSIER_BIN_DIR" $path)

# Add Haskell tools to PATH
[[ -f "${GHCUP_INSTALL_BASE_PREFIX:-$HOME}/.ghcup/env" ]] && source "${GHCUP_INSTALL_BASE_PREFIX:-$HOME}/.ghcup/env"

# Add Rust toolchain to PATH
[[ -f ~/.cargo/env ]] && source ~/.cargo/env

# Customize PATH
path=(~/.local/bin $path)

if [[ -n "$HOMEBREW_PREFIX" ]]; then
  # If LLVM is installed, add all of the LLVM utilities to the end of the path.
  [[ -d "$HOMEBREW_PREFIX/opt/llvm/bin" ]] && path=($path "$HOMEBREW_PREFIX/opt/llvm/bin")

  # If ruby is installed, add to the start of the path, to override the
  # OS-provided version.
  [[ -d "$HOMEBREW_PREFIX/opt/ruby/bin" ]] && path=("$HOMEBREW_PREFIX/opt/ruby/bin" $path)
  [[ -d "$HOMEBREW_PREFIX/lib/ruby/gems/3.2.0/bin" ]] && path=("$HOMEBREW_PREFIX/lib/ruby/gems/3.2.0/bin" $path)

  # If 'make' is installed, add it to the start of the path, so we can use more
  # modern 'make' features.
  [[ -d "$HOMEBREW_PREFIX/opt/make/libexec/gnubin" ]] && path=("$HOMEBREW_PREFIX/opt/make/libexec/gnubin" $path)
fi

# Configure bat theme
export BAT_THEME="tokyonight_storm"

# Set up modifications for Python REPL
[[ -f "$HOME/.pystartup" ]] && export PYTHONSTARTUP="$HOME/.pystartup"

# Set up git aliases
[[ -f "$HOME/.config/git.zsh" ]] && source "$HOME/.config/git.zsh"

# Configure line editor
[[ -f "$HOME/.config/editor.zsh" ]] && source "$HOME/.config/editor.zsh"

# Set up default text editor
if command -v nvim > /dev/null 2>&1 ; then
  alias vim="nvim"
  alias vimdiff="nvim -d"
  export EDITOR="nvim"
  export VISUAL="nvim"
else
  export EDITOR="vim"
  export VISUAL="vim"
fi

export PAGER="less"

# Customize 'less' options
export LESS="-i -M -R -S -w -X -z-4"

# Replace ls with eza
if command -v eza > /dev/null 2>&1 ; then
  alias eza="eza --classify"
  alias ls="eza"
  alias ll="ls --long --binary --group --icons"
  alias llg="ll --git"
  alias la="ll --all"
  alias l="ls --oneline --all"
  alias lr="ls --recurse"
  alias llr="ll --recurse"
  alias lt="ls --tree"
  alias llt="ll --tree"
  alias llst="ll --sort=newest" # Sort by modified time, most recent at the bottom
  alias llss="ll --sort=size"   # Sort by size, largest at the bottom

  # 'git status' in tree view
  alias gwst="eza -l --tree --git --git-ignore \
    --no-filesize --no-permissions --no-user --no-time --color=always \
    | awk '\$1 !~ /--/ { print }'"
fi

# Set up fzf
[ -f ~/.fzf.zsh ] && [[ -f "$HOME/.config/fzf-config.zsh" ]] && source "$HOME/.config/fzf-config.zsh"

# Set up shell prompt
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Set up wezterm shell integration
function {
  local wezterm_shell_int_macos="/Applications/WezTerm.app/Contents/Resources/wezterm.sh"
  [[ -f "$wezterm_shell_int_macos" ]] && source "$wezterm_shell_int_macos"
}

# Load powerlevel10k theme.
if [[ -r "$ZSH_DIR/plugins/powerlevel10k/powerlevel10k.zsh-theme" ]]; then
  source "$ZSH_DIR/plugins/powerlevel10k/powerlevel10k.zsh-theme"
fi

# Type-ahead completion plugin, must come before calling `compdef`.
if [[ -r "$ZSH_DIR/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh" ]]; then
  source "$ZSH_DIR/plugins/zsh-autocomplete/zsh-autocomplete.plugin.zsh"
fi

zstyle ':completion:*' file-sort modification
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'

# Configure zsh-autocomplete.

# When you hit Tab, before going to the completion menu, first insert the
# sequence of characters that are common to all the completions (if any exist).
zstyle ':autocomplete:*complete*:*' insert-unambiguous yes

# Use Tab and Shift-Tab to move through the completion menu
bindkey -M viins "${terminfo[kcbt]}" reverse-menu-complete
bindkey -M viins "${terminfo[ht]}" menu-complete

# Undo settings from zsh-autocomplete, reset up and down arrows to their
# original behavior.
() {
  local -a prefix=( '\e'{\[,O} )
  local -a up=( ${^prefix}A ) down=( ${^prefix}B )
  local key=
  for key in $up[@]; do
    bindkey "$key" up-line-or-history
  done
  for key in $down[@]; do
    bindkey "$key" down-line-or-history
  done
}
